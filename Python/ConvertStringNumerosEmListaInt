'''

Faça um programa em python que receba uma string com números separados 
com vírgula e depois converta para uma lista de int.

Você pode fazer isso em Python usando a função split() para separar a 
string em substrings nos pontos onde há vírgulas e, em seguida, a 
função map() para aplicar a conversão para inteiro a  cada substring. 
Aqui está um exemplo de programa:

entrada = input("Digite uma sequência de números separados por vírgula: ")
numeros_str = entrada.split(",")
numeros_int = list(map(int, numeros_str))
print(numeros_int)

Neste exemplo, a entrada do usuário é lida usando a função input() e 
armazenada na variável entrada. A função split(",") é usada para separar 
a string em substrings sempre que houver uma vírgula. Os substrings são 
armazenados em uma lista de strings chamada numeros_str.

Em seguida, a função map(int, numeros_str) é usada para aplicar a 
conversão para inteiro a cada elemento da lista numeros_str. 
A função map() retorna um objeto de mapa, que é convertido em 
uma lista de inteiros usando a função list() e armazenado na variável 
numeros_int.

Por fim, a lista numeros_int é exibida na tela usando a função print(). 
Se o usuário digitar, por exemplo, a sequência "1,2,3,4,5", o programa 
irá converter essa string em uma lista de inteiros [1, 2, 3, 4, 5].

numeros = [int(x) for x in input("Digite uma sequência de números separados por vírgula: ").split(",")]


Eu gostaria que você não precisasse usar a variavel numeros_str e numeros_int. 
Apenas uma em relação a isso. eu quero mais ou menos assim: numeros_int = list(map(int, entrada.split(",")))

Sim, você pode fazer isso em apenas uma linha de código, como você sugeriu:

numeros_int = list(map(int, input("Digite uma sequência de números separados por vírgula: ").split(",")))

Neste exemplo, a função input() é usada para ler a entrada do usuário, a função split(",") é usada para separar a string em substrings 
sempre que houver uma vírgula e, 
em seguida, a conversão para inteiro é aplicada a cada substring usando a função int().

Tudo isso é feito dentro de uma única linha de código usando a função list() e a função map() para criar a lista de inteiros resultante. 
A lista resultante contendo os inteiros é armazenada na variável numeros_int.


Claro, aqui está um exemplo completo de um programa Python que usa a técnica de "list comprehension" para converter uma sequência de números 
separados por vírgula em uma lista de inteiros:

numeros = [int(x) for x in input("Digite uma sequência de números separados por vírgula: ").split(",")]

print("A lista de números é:", numeros)

Neste exemplo, a função input() é usada para ler a entrada do usuário, a função split(",") é usada para separar a string em substrings sempre que 
houver uma vírgula e, em seguida, a conversão para inteiro é aplicada a cada substring usando a expressão int(x) dentro da "list comprehension".

Tudo isso é feito dentro de uma única linha de código, que cria a lista de inteiros numeros. Essa lista é exibida na tela usando a função print().

Se o usuário digitar, por exemplo, a sequência "1,2,3,4,5", o programa irá converter essa string em uma lista de inteiros [1, 2, 3, 4, 5] e exibir 
na tela.

Observe que este método é mais conciso do que o exemplo anterior que usava as variáveis numeros_str e numeros_int. Além disso, 
é mais eficiente em termos de memória, pois não cria listas temporárias intermediárias.

Claro, aqui está o exemplo usando a função map() para converter a sequência de números separados por vírgula em uma lista de inteiros:

numeros_int = list(map(int, input("Digite uma sequência de números separados por vírgula: ").split(",")))

print("A lista de números é:", numeros_int)

Neste exemplo, a função input() é usada para ler a entrada do usuário, a função split(",") é usada para separar a string em substrings 
sempre que houver 
uma vírgula e, em seguida, a conversão para inteiro é aplicada a 
cada substring usando a função int() dentro da função map().

Tudo isso é feito dentro de uma única linha de código, que cria a lista de inteiros numeros_int. Essa lista é exibida na tela usando a função print().

Se o usuário digitar, por exemplo, a sequência "1,2,3,4,5", o programa irá converter essa string em uma lista de inteiros [1, 2, 3, 4, 5] e 
exibir na tela.


'''
