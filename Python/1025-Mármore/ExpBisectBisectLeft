import bisect

lst = [1, 3, 5, 7, 9]

# Busca o índice em que o elemento 5 deve ser inserido
idx = bisect.bisect_left(lst, 5)

# Verifica se o elemento 5 está presente na lista
if idx < len(lst) and lst[idx] == 5:
    print("Elemento 5 está presente na lista na posição", idx)
else:
    print("Elemento 5 não está presente na lista")


# Busca o índice em que o elemento 5 deve ser inserido
idx = bisect.bisect_left(lst, 5)

# Verifica se o elemento 5 está presente na lista
if idx < len(lst) and lst[idx] == 5:
    print("Elemento 5 está presente na lista na posição", idx)
else:
    print("Elemento 5 não está presente na lista")
    
    
A função bisect_left do módulo bisect do Python não verifica se o 
elemento está presente na lista, apenas retorna o índice em que o 
elemento deveria ser inserido para manter a sua ordenação.

Para verificar se o elemento está presente na lista, é necessário 
fazer uma verificação adicional, utilizando o índice retornado pela 
função bisect_left.

Por exemplo, se quisermos verificar se o elemento 5 está presente 
na lista lst = [1, 3, 5, 7, 9], podemos chamar a função bisect_left 
com os argumentos lst e 5, obtendo o índice 2. Para verificar se o 
elemento 5 está presente na lista, podemos comparar o elemento na 
posição 2 com o elemento buscado:
    
 A função bisect_left do módulo bisect do Python não verifica se o 
 elemento está presente na lista, apenas retorna o índice em que o 
 elemento deveria ser inserido para manter a sua ordenação.

Para verificar se o elemento está presente na lista, é necessário 
fazer uma verificação adicional, utilizando o índice retornado pela 
função bisect_left.

Por exemplo, se quisermos verificar se o elemento 5 está presente 
na lista lst = [1, 3, 5, 7, 9], podemos chamar a função bisect_left 
com os argumentos lst e 5, obtendo o índice 2. Para verificar se o 
elemento 5 está presente na lista, podemos comparar o elemento na 
posição 2 com o elemento buscado:






