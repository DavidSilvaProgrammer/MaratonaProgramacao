def eh_primo(num):
    if num < 2:
        return False
    for i in range(2, int(num ** 0.5) + 1):
        if num % i == 0:
            return False
    return True

def n_esimo_primo(n):
    count = 0
    num = 2
    while count < n:
        if eh_primo(num):
            count += 1
            if count == n:
                return num
        num += 1

n = int(input("Digite o valor de n: "))
print(f"O {n}-ésimo número primo é: {n_esimo_primo(n)}")


/*

Primeiramente, criamos uma função eh_primo(num) que recebe um número inteiro num como argumento e retorna True se num é primo, e False caso contrário. Essa função utiliza a técnica de verificar se o número é divisível por algum número inteiro entre 2 e a raiz quadrada de num, o que reduz o número de divisões necessárias.

Em seguida, criamos a função n_esimo_primo(n) que recebe um número inteiro n como argumento e retorna o n-ésimo número primo. Essa função inicializa uma variável count para contar o número de primos encontrados e uma variável num para iterar sobre os números até encontrar o n-ésimo primo. A função utiliza a função eh_primo para verificar se cada número num é primo, e incrementa count quando um número primo é encontrado. Quando count é igual a n, a função retorna o número primo encontrado.

Por fim, pedimos ao usuário que digite o valor de n e imprimimos na tela o n-ésimo número primo utilizando a função n_esimo_primo(n).
*/


